import { Cell } from '@ton/core';
import fs from 'fs';

// Your hexadecimal string
const hexString = 'b5ee9c7241021301000250000114ff00f4a413f4bcf2c80b01020120020f0201480304005ad0f891f24020d74bc00101c060b09130e1f892f828c7059130e1f82a01d72c2572172d24f2e06fd74ced55fb04020120050a02027306070011adce76a2686b85ffc002012008090022abb6ed44d0810120d721f401f401d70a3f0016aa3bed44d0d3ff31d70b1f0201200b0c0029b9a6eed44d0810120d721f401f401d33f31d70a15802f9b8bf2eda2edfb21ab09028409b0ed44d0810120d718f404f404d23f20d70a15078e1df82327a122bc8e12336df82307aa0017a1b992306dde5004f8239136e29136e2531205c8ce15f40014f40013ca3f14cec9ed545233800df40e6fa18e10d4d1d021d721d70a00955f037fdb31e09130e259800df40e6fa1e30f7080d0e001cd4d1d001d721d70a00937fdb31e000025b02f8f2208308d722ed44d0d3ffd31ff404f404d23f20d70a15f82321a123bc8e14346df82325aa00a113b993326d02de4130f82302de08d74c20f900541087f910f2a106d0d31fd4d307d30cd309d33fd70b15516abaf2a2515cbaf2a6f823500ca124b9f2a303f823bbf2a35325800df40e6fa19130e30d5324800df40e1011001ad4d1d02ad721d70a00c000f2a401fe6fa18e14d4d1d0500ad718d20001c000f2a401c8cecf83ce8e1030c82acf40cf838409500ba1a51acf40e2f800c94004800df41705c8cbff14cb1f12f40013f400ca3f12cec9ed54f80f20d0d30001c000f2a5d3020171b0925f03e0fa4001d72c0131f2a5fa4031fa0031f401fa0031fa0031d35f31d30001c000f2a5d20012001a0193d431d19130e20172b1fb00c0566741';

// Convert hex string to a Cell object
const cell = Cell.fromHex(hexString);

// Get the BOC
// Depending on the library, this might return a Buffer or Uint8Array
const boc = cell.toBoc();
fs.writeFileSync('output_lazy.boc', boc)
console.log(boc);